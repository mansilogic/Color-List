import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Color List Generator',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: ColorListPage(),
    );
  }
}

class ColorListPage extends StatefulWidget {
  @override
  _ColorListPageState createState() => _ColorListPageState();
}

class _ColorListPageState extends State<ColorListPage> {
  TextEditingController _controller = TextEditingController();
  List<Color> colors = [Colors.red, Colors.green, Colors.blue, Colors.yellow];
  List<Color> selectedColors = [];

  void generateColors(int number) {
    selectedColors.clear();
    for (int i = 0; i < number; i++) {
      selectedColors.add(colors[i % 4]);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Color List Generator'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _controller,
              keyboardType: TextInputType.number,
              decoration: InputDecoration(
                labelText: 'Enter a number',
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                int number = int.tryParse(_controller.text) ?? 0;
                generateColors(number);
                setState(() {});
              },
              child: Text('Generate Colors'),
            ),
            SizedBox(height: 20),
            Expanded(
              child: ListView.builder(
                itemCount: selectedColors.length,
                itemBuilder: (context, index) {
                  return Padding(
                    padding: const EdgeInsets.symmetric(vertical: 8.0),
                    child: Container(
                      height: 50,
                      decoration: BoxDecoration(
                        color: selectedColors[index],
                        border: Border.all(color: Colors.black),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }
}
